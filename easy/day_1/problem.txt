You have n sticks, numbered from 1 to n. The length of the i-th stick is 2^(a[i]). You want to choose exactly 3 sticks out of the given n sticks, and form a non-degenerate triangle out of them, using the sticks as the sides of the triangle. A triangle is called non-degenerate if its area is strictly greater than 0. You have to calculate the number of ways to choose exactly 3 sticks so that a triangle can be formed out of them. Note that the order of choosing sticks does not matter (for example, choosing the 1-st, 2-nd and 4-th stick is the same as choosing the 2-nd, 4-th and 1-st stick).

Input
The first line contains one integer t (1<= t <= 10000)  — the number of test cases.
Each test case consists of two lines:
the first line contains one integer n (1≤n≤300000);
the second line contains n integers a[1], a[2], … , a[n] (0 <= a[i] <= n)
Additional constraint on the input: the sum of n over all test cases does not exceed 300000.

Output
For each test case, print one integer — the number of ways to choose exactly 3 sticks so that a triangle can be formed out of them.

Go to sample_test_case.txt for sample test cases to the above problem
Go to solution.cpp to get the provided solution to the above problem
Go to task.txt to get the information on what you have to do in this challenge.
